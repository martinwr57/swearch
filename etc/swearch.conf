[index]
super_admin_key = secret
elastic_hosts = host1,host2,host3
search_index_name = alias_or_index_name
user = swift
river_prefetch_count = 5000

# when to force a commit when either one of these
# values are hit, whichever happens first.
# http://www.elasticsearch.org/guide/reference/api/bulk/
river_bulk_size = 500
river_bulk_timeout = 100ms

# used to store progress on backfills
redis_host = 127.0.0.1
redis_port = 6379
redis_prefix = swift.datacenter.search.


[queue]
rabbitmq_vhost = objectstorage
rabbitmq_hosts = host1,host2,host3
rabbitmq_backfill_exchange = datacenter.search.backfill
rabbitmq_user = objectstorage
rabbitmq_exchange = datacenter.search
rabbitmq_routing_key = datacenter.search.river
rabbitmq_password = secret
search_index_name = alias_or_index_name
rabbitmq_backfill_queue = datacenter.search.backfill
rabbitmq_queue = datacenter.search.river

# number of objects to get per container.  There could be millions
# per container, set with caution
container_listing_count = 7000

# batch sizes before checking waterlevel
account_prefetch_count = 1
container_prefetch_count = 1
object_prefetch_count = 1000

# once highwater is hit, how often to check for highwater_ok
container_waterlevel_interval = 10
object_waterlevel_interval = 5
river_waterlevel_interval = 1

# water levels
river_highwater_ok = 100
river_highwater = 10000
container_highwater = 100
container_highwater_ok = 80
object_highwater = 10000
object_highwater_ok = 5000
